# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-08 02:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Common', '0001_initial'),
        ('Hardware', '0003_auto_20170608_1039'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callRecordSize', models.IntegerField(default=0)),
                ('textSize', models.IntegerField(default=0)),
                ('ldapCIPSize', models.IntegerField(default=0)),
                ('sessionCIPSize', models.IntegerField(default=0)),
                ('otherCIPSize', models.IntegerField(default=0)),
                ('callCost', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CallCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callCost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CallType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('ss7InSize', models.IntegerField(default=0)),
                ('ss7OutSize', models.IntegerField(default=0)),
                ('ss7Number', models.IntegerField(default=0)),
                ('tcpipSize', models.IntegerField(default=0)),
                ('tcpipNumber', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CounterCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CounterCostName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='DBInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recordSize', models.IntegerField(default=0)),
                ('todoLogSize', models.IntegerField(default=0)),
                ('mateLogSize', models.IntegerField(default=0)),
                ('updateTimes', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DBName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureCPUImpact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ccImpactCPUTime', models.FloatField(default=0)),
                ('ccImpactCPUPercentage', models.FloatField(default=0)),
                ('ccSS7In', models.IntegerField(default=0)),
                ('ccSS7Out', models.IntegerField(default=0)),
                ('reImpactCPUTime', models.FloatField(default=0)),
                ('reImpactCPUPercentage', models.FloatField(default=0)),
                ('reSS7InSize', models.IntegerField(default=0)),
                ('reSS7OutSize', models.IntegerField(default=0)),
                ('ldapMessageSize', models.IntegerField(default=0)),
                ('diameterMessageSize', models.IntegerField(default=0)),
                ('featureName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.DBName')),
            ],
        ),
        migrations.CreateModel(
            name='FeatureDBImpact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memberImpactFactor', models.FloatField()),
                ('groupImpactFactor', models.FloatField()),
                ('dbName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.DBName')),
            ],
        ),
        migrations.CreateModel(
            name='FeatureName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('impactDB', models.CharField(max_length=64)),
                ('comment', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField()),
                ('callRecordSize', models.IntegerField()),
                ('ldapCIPSize', models.IntegerField()),
                ('sessionCIPSize', models.IntegerField()),
                ('otherCIPSize', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='featuredbimpact',
            name='featureName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.FeatureName'),
        ),
        migrations.AddField(
            model_name='dbinformation',
            name='db',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.DBName'),
        ),
        migrations.AddField(
            model_name='dbinformation',
            name='mode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Common.DBMode'),
        ),
        migrations.AddField(
            model_name='dbinformation',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.Release'),
        ),
        migrations.AddField(
            model_name='countercost',
            name='counterCostName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.CounterCostName'),
        ),
        migrations.AddField(
            model_name='countercost',
            name='cpu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hardware.CPU'),
        ),
        migrations.AddField(
            model_name='countercost',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.Release'),
        ),
        migrations.AddField(
            model_name='callcost',
            name='callType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.CallType'),
        ),
        migrations.AddField(
            model_name='callcost',
            name='cpu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hardware.CPU'),
        ),
        migrations.AddField(
            model_name='callcost',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.Release'),
        ),
        migrations.AddField(
            model_name='applicationinformation',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.ApplicationName'),
        ),
        migrations.AddField(
            model_name='applicationinformation',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.Release'),
        ),
    ]

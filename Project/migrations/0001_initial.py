# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-08 02:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Hardware', '0003_auto_20170608_1039'),
        ('Service', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CounterConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('averageBundleNumberPerSubscriber', models.FloatField(default=0)),
                ('average24hBundleNumberPerSubscriber', models.FloatField(default=0)),
                ('nonAppliedBucketNumber', models.FloatField(default=0)),
                ('nonAppliedUBDNumber', models.FloatField(default=0)),
                ('appliedBucketNumber', models.FloatField(default=0)),
                ('appliedUBDNumber', models.FloatField(default=0)),
                ('generateMultipleAMAForCounter', models.BooleanField(default=False)),
                ('turnOnBasicCriteriaCheck', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DBConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbFactor', models.FloatField(default=0)),
                ('placeholderRatio', models.FloatField(default=0)),
                ('memberGroupOption', models.CharField(choices=[('member', 'Member'), ('group', 'Group')], default='member', max_length=10)),
                ('dbInfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.DBInformation')),
            ],
        ),
        migrations.CreateModel(
            name='FeatureConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featurePenetration', models.FloatField(default=0)),
                ('colocateMemberGroup', models.BooleanField()),
                ('rtdbSolution', models.BooleanField(default=True)),
                ('groupNumber', models.FloatField(default=1)),
                ('ratioOfLevel1', models.FloatField(default=1)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.FeatureName')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.CharField(max_length=30)),
                ('sigtranLinkSpeed', models.IntegerField()),
                ('sigtranLinkNumber', models.IntegerField()),
                ('sigtranPortUtil', models.FloatField()),
                ('amaRecordPerBillingBlock', models.FloatField(default=1)),
                ('numberReleaseToEstimate', models.IntegerField(default=0)),
                ('cpuImpactPerRelease', models.FloatField(default=0.05)),
                ('memoryImpactPerRelease', models.FloatField(default=0.1)),
                ('dbImpactPerRelease', models.FloatField(default=0.1)),
                ('database_type', models.CharField(choices=[('rtdb', 'RTDB'), ('ndb', 'NDB')], default='rtdb', max_length=16)),
                ('deploy_option', models.CharField(choices=[('individual', 'Individual'), ('combo', 'Combo')], default='combo', max_length=16)),
                ('averageAMARecordPerCall', models.FloatField()),
                ('amaStoreDay', models.FloatField()),
                ('activeSubscriber', models.IntegerField()),
                ('inactiveSubscriber', models.IntegerField()),
                ('groupAccountNumber', models.IntegerField()),
                ('cpuUsageTuning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hardware.CPUTuning')),
                ('memoryUsageTuning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hardware.MemoryUsageTuning')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.Release')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinetNumberPerSystem', models.IntegerField(default=1)),
                ('backupAppNodeNumberPerSystem', models.IntegerField(default=0)),
                ('spareAppNodeNumberPerSystem', models.IntegerField(default=0)),
                ('backupDBNodeNumberPerSystem', models.IntegerField(default=0)),
                ('spareDBNodePairNumberPerSystem', models.IntegerField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project')),
            ],
        ),
        migrations.CreateModel(
            name='TrafficInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activeSubscriber', models.IntegerField()),
                ('inactiveSubscriber', models.IntegerField()),
                ('trafficBHTA', models.FloatField(default=0)),
                ('trafficTPS', models.FloatField(default=0)),
                ('callHoldingTime', models.IntegerField(default=0)),
                ('averageActiveSessionPerSubscriber', models.FloatField(default=0)),
                ('averageCategoryPerCCR', models.FloatField(default=1)),
                ('averageCategoryPerSession', models.FloatField(default=1)),
                ('volumeCCRiBHTA', models.FloatField(default=0)),
                ('volumeCCRuBHTA', models.FloatField(default=0)),
                ('volumeCCRtBHTA', models.FloatField(default=0)),
                ('timeCCRiBHTA', models.FloatField(default=0)),
                ('timeCCRuBHTA', models.FloatField(default=0)),
                ('timeCCRtBHTA', models.FloatField(default=0)),
                ('callType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.CallType')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project')),
            ],
        ),
        migrations.CreateModel(
            name='CallTypeCounterConfiguration',
            fields=[
                ('counterconfiguration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Project.CounterConfiguration')),
                ('callType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.CallType')),
            ],
            bases=('Project.counterconfiguration',),
        ),
        migrations.AddField(
            model_name='featureconfiguration',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project'),
        ),
        migrations.AddField(
            model_name='dbconfiguration',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project'),
        ),
        migrations.AddField(
            model_name='counterconfiguration',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Project.Project'),
        ),
    ]
